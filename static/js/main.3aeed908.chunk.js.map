{"version":3,"sources":["Box.js","App.js","serviceWorker.js","index.js"],"names":["Content","styled","div","_templateObject","Div","_templateObject2","props","dark","H1","header","_templateObject3","Box","_this$props","this","confirmed","recovered","deaths","title","react_default","a","createElement","style","color","Component","Container","App_templateObject","Body","App_templateObject2","App_templateObject3","Select","select","_templateObject4","Option","option","_templateObject5","Footer","footer","_templateObject6","But","button","_templateObject7","Detail","_templateObject8","DetailList","_templateObject9","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","confirmedPoland","recoveredPoland","deathsPoland","confirmedCountry","recoveredCountry","deathsCountry","countries","lastUpdate","timelineitems","time","click","error","componentDidMount","getData","getDataPoland","getCountry","getTimeDataPoland","changeMotyw","setState","convertDate","i","month","slice","getDetails","getCountryData","bind","assertThisInitialized","Axios","get","respone","lastData","data","myData","myTime","value","t","JSON","parse","stringify","keys","values","pop","console","log","_context3","t0","e","concat","target","map","country","key","name","_this2","_this$state","onClick","App_H1","src_Box","new_daily_cases","new_daily_deaths","total_cases","total_deaths","total_recoveries","fontSize","onChange","selectCountry","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3aeed908.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Content = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n@media (max-width: 768px) {\r\n    display: inline;\r\n    justify-content: center;\r\n  }\r\n  padding-bottom:25px;\r\n  padding-top:25px;\r\n`\r\nconst Div = styled.div`\r\nbackground: ${props => props.dark ? '#ff8c66' : '#1f2427'} ;\r\nwidth: 150px;\r\npadding: 10px;\r\nborder-radius: 10px;\r\ncolor: #aaa;\r\nmargin: 0 auto;\r\nmargin-top:10px;\r\n`\r\nconst H1 = styled.header`\r\ncolor: #aaa;\r\nfont-size:30px;\r\npadding-top:15px;\r\n`\r\n\r\nclass Box extends Component{\r\n\r\n\r\n    render(){\r\n      const {confirmed,recovered,deaths,title} = this.props;\r\n      return(\r\n      <div>\r\n        <H1>{title}</H1>\r\n        <Content> \r\n          <Div >\r\n            <header>Zarażeń</header>\r\n            <span style={{ color: '#b38f00' }}>{confirmed}</span>\r\n          </Div>\r\n          <Div >\r\n            <header>Wyzdrownień</header>\r\n             <span style={{ color: '#12aa23' }}>{recovered}</span>\r\n          </Div>\r\n          <Div >\r\n            <header>Zgonów</header>\r\n            <span style={{ color: '#c11' }}>{deaths}</span>\r\n          </Div>\r\n         </Content>\r\n         </div>\r\n        \r\n      )\r\n    }\r\n  }\r\n\r\n  export default Box;","\nimport Axios from 'axios';\nimport React, { Component } from 'react';\nimport styled from 'styled-components'\nimport Box from './Box'\n\nconst Container = styled.div`\nbackground: ${props => props.dark ? 'rgb(52, 55, 68)' : '#eee'} ;\nwidth: 80%;\nborder-radius: 25px;\npadding: 20px;\npadding-top:20px;\nmax-width: 680px;\ntext-align:center;\nmargin: 0 auto;\n\njustify-content: center;\nfont-size: 20px;\nfont-family: 'Roboto Mono', monospace;\nposition: relative;\n`\nconst Body = styled.div`\nbackground: ${props => props.dark ? '1f2427' : '#aaa'} ;\nheight: 100%;\nmin-height: 100vh;\nwidth: inherit;\npadding-top: 4vh;\npadding-bottom: 4vh;\n`\nconst H1 = styled.header`\ncolor: #aaa;\nfont-size:30px;\npadding-top:15px;\n`\n\nconst Select = styled.select`\nbackground: ${props => props.dark ? '#343744' : '#eee'} ;\nborder-style: dashed;\ncolor: #aaa;\nfont-size: 30px;\nborder-radius: 5px;\ntext-align-last: center;\n   text-align: center;\n   -ms-text-align-last: center;\n   -moz-text-align-last: center;\npadding-top:5px;\npadding-bottom:5px;\nwidth: 80%;\n`\n\nconst Option = styled.option`\npadding-top:5px;\npadding-bottom:5px;\n`\nconst Footer = styled.footer`\nfont-size: 15px;\ncolor: #000;\n@media (max-width: 600px){\n  font-size: 11px;\n}\n\n`\nconst But = styled.button`\nposition:absolute;\nright: 10px;\nbottom: 20px;\nborder-radius:10px;\npadding:10px;\nfont-size:16px;\nborder:0;\nfont-size: 15px;\nfont-family: 'Roboto Mono';\ncolor:${props => props.dark ? '#aaa' : '#1f2427'} ;\nbackground: ${props => props.dark ? '#1f2427' : '#aaa'} ;\n@media (max-width: 600px){\n  font-size: 11px;\n  bottom: 5px;\n}\n`\nconst Detail = styled.div`\ncursor: pointer;\nmargin-top: -20px;\nmargin-bottom: 20px;\nfont-size: 15px;\n@media (max-width: 768px){\n  margin-top: 3px;\n}\n`\n\nconst DetailList = styled.div`\n@media (max-width: 400px){\n  font-size: 15px;\n}\n`\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.getCountryData = this.getCountryData.bind(this);\n  }\n\n  state = {\n    confirmed: 0,\n    recovered: 0,\n    deaths: 0,\n    confirmedPoland: 0,\n    recoveredPoland: 0,\n    deathsPoland: 0,\n    confirmedCountry: 0,\n    recoveredCountry: 0,\n    deathsCountry: 0,\n    countries: [],\n    lastUpdate: '',\n    dark: true,\n    timelineitems: [],\n    time: [],\n    click: false,\n    error: false\n\n  }\n  componentDidMount = () => {\n    this.getData();\n    this.getDataPoland();\n    this.getCountry();\n    this.getTimeDataPoland();\n  }\n\n  async getData() {\n    try{\n      const respone = await Axios.get('https://covid19.mathdro.id/api');\n      let lastData = respone.data.lastUpdate;\n      let myData = lastData.slice(0, 10);\n      let myTime = lastData.slice(11, 16);\n      this.setState({\n        confirmed: respone.data.confirmed.value,\n        recovered: respone.data.recovered.value,\n        deaths: respone.data.deaths.value,\n        lastUpdate: myData + ' ' + myTime\n      })\n    }\n    catch{\n      this.setState({\n        confirmed: 'brak danych',\n        recovered: 'brak danych',\n        deaths: 'brak danych',\n        lastUpdate: 'brak danych'\n      })\n    }\n    \n\n\n  }\n  async getDataPoland() {\n    \n    try{\n        const respone = await Axios.get('https://covid19.mathdro.id/api/countries/PL');\n      this.setState({\n        confirmedPoland: respone.data.confirmed.value,\n        recoveredPoland: respone.data.recovered.value,\n        deathsPoland: respone.data.deaths.value\n      })\n    }\n    catch(err)\n    {\n      this.setState({\n        confirmedPoland: 'brak danych',\n        recoveredPoland: 'brak danych',\n        deathsPoland: 'brak danych'\n      })\n    }\n    \n  }\n\n  async getTimeDataPoland() {\n    try{\n      const respone = await Axios.get(\"https://api.thevirustracker.com/free-api?countryTimeline=PL\");\n      const t = JSON.parse(JSON.stringify(respone.data.timelineitems[0]));\n      const time = Object.keys(respone.data.timelineitems[0]);\n      const timelineitems = Object.values(t);\n      timelineitems.pop();\n      this.setState({\n        timelineitems: timelineitems,\n        time\n      })\n    }\n    catch(err)\n    {\n      this.setState({\n        timelineitems: [],\n        time: [],\n        error: true\n      })\n      console.log(err)\n    }\n    \n  }\n  async getCountry() {\n    try{\n      const respone = await Axios.get('https://covid19.mathdro.id/api/countries');\n      const countries = JSON.parse(JSON.stringify(respone.data.countries));\n\n      this.setState({\n        countries\n      })\n    }\n    catch(err)\n    {\n      this.setState({\n        countries: []\n      })\n    }\n  }\n  async getCountryData(e) {\n    try{\n      const respone = await Axios.get(`https://covid19.mathdro.id/api/countries/${e.target.value}`);\n      this.setState({\n        confirmedCountry: respone.data.confirmed.value,\n        recoveredCountry: respone.data.recovered.value,\n        deathsCountry: respone.data.deaths.value\n      })\n    }\n    catch(err)\n    {\n      this.setState({\n        confirmedCountry: 'brak danych',\n        recoveredCountry: 'brak danych',\n        deathsCountry: 'brak danych'\n      })\n    }\n    \n  }\n  selectCountry() {\n    return this.state.countries.map((country, i) => {\n      return <Option key={i}>{country.name}</Option>\n    })\n  }\n\n  changeMotyw = () => {\n    this.setState({ dark: !this.state.dark })\n  }\n  convertDate = (i) => {\n    let month = this.state.time[i].slice(0, 1)\n    let day = this.state.time[i].slice(2, 4)\n    let myDate = day + '-0' + month;\n    return myDate;\n  }\n  getDetails = () => {\n    this.setState({ click: !this.state.click })\n  }\n  render() {\n    const { dark, click ,error} = this.state;\n\n    return (\n      <Body dark={dark}>\n        <Container dark={dark}>\n          <But onClick={this.changeMotyw} dark={dark}>Dark/Light</But>\n          <H1>Statystyki koronawirusa</H1>\n          <Box title=\"Świat\" confirmed={this.state.confirmed} recovered={this.state.recovered} deaths={this.state.deaths} />\n          <Box title=\"Polska\" confirmed={this.state.confirmedPoland} recovered={this.state.recoveredPoland} deaths={this.state.deathsPoland} />\n          <Detail onClick={this.getDetails}>{click ? <span>Ukryj</span> : <span>Pokaż</span>} szczegóły</Detail>\n          \n          <DetailList>{click ? <div>{this.state.timelineitems.map((t, i) => <div key={i}>\n            <p style={{ color: '#999' }}>{this.convertDate(i)}</p>\n            <p> Nowe przypadki:<span style={{ color: '#b38f00' }}> {t.new_daily_cases}</span><br />\n                Nowe zgony: <span style={{ color: '#c11' }}>{t.new_daily_deaths}</span> <br />\n                Wszystkie przypadki: <span style={{ color: '#bb7733' }}> {t.total_cases}</span><br />\n                Łącznie zgonów: <span style={{ color: '#911' }}>{t.total_deaths}</span> <br />\n                Łącznie wyzdrowień:<span style={{ color: '#12aa23' }}> {t.total_recoveries}</span>\n            \n            </p> </div>)} <span style={{ color: '#c11', fontSize: '14px' }}>\n              {error ?  <span>Brak danych</span> : \n              <span>UWAGA Dane szczegółowe dotyczące wyzdrownień pochodzą z innego źródła i mogą się różnić od danych ogólnych</span> }\n          </span></div> : <div></div>}\n          </DetailList>\n\n          <H1>\n            <Select dark={dark} onChange={this.getCountryData}>\n              {this.selectCountry()}\n            </Select>\n          </H1>\n          <Box title=\"\" confirmed={this.state.confirmedCountry} recovered={this.state.recoveredCountry} deaths={this.state.deathsCountry} />\n          <Footer style={{ color: '#000' }}> Ostatnia aktualizacja<br />{this.state.lastUpdate}</Footer>\n\n\n        </Container>\n      </Body>\n\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}